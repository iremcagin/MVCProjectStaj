@model myProject.Models.ModelForSellerPages

@{
    ViewData["Title"] = "Seller";
    Layout = "~/Views/Shared/_LayoutSeller.cshtml";
    int totalPages = ViewBag.TotalPages;
    int currentPage = ViewBag.CurrentPage;

}

<style>
    .btn-smaller {
        padding: 0.25rem 0.5rem;
        font-size: 0.75rem;
    }

    .no-outline:focus {
        outline: none;
        box-shadow: none;
    }

    #filterForm label{
        font-size: 13px;
        font-weight: 600;
    }
    #filterForm input,
    #filterForm select {
        font-size:13px;
    }

    #filterForm .form-control{
        width:95px;
    }

    .filter-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #f9f9f9;
        box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1);
        display:flex;
        justify-content:center;
    }

    .table-description:hover {
        cursor: pointer;
    }
</style>


<div class="container-fluid">

    @{/*
    <div class="row">
       
        <div class="col-11" style="margin-top:-10px;">
            
            <div class="filter-card">

                <form id="filterForm" class="d-flex flex-wrap align-items-start justify-content-center gap-2">
                    <!-- Search Input -->
                    <div class="form-group d-flex flex-column">
                        <label for="searchInput" class="mr-2">Name</label>
                        <input type="text" class="form-control form-control-sm no-outline me-2" id="searchInput" placeholder="Search...">
                    </div>
                    <!-- Price Filter -->
                    <div class="form-group d-flex align-items-start flex-column">
                        <label for="priceFilterMin" class="me-2">Price</label>
                        <div class="d-flex flex-wrap">
                            <input type="number" class="form-control form-control-sm no-outline mr-1" id="priceFilterMin" placeholder="Min Price">
                            <input type="number" class="form-control form-control-sm no-outline" id="priceFilterMax" placeholder="Max Price">
                        </div>
                    </div>

                    <!-- Stock Filter -->
                    <div class="form-group d-flex align-items-start flex-column">
                        <label for="stockFilterMin" class="mr-2">Stock</label>
                        <div class="d-flex flex-wrap">
                            <input type="number" class="form-control form-control-sm no-outline mr-1" id="stockFilterMin" placeholder="Min Stock">
                            <input type="number" class="form-control form-control-sm no-outline" id="stockFilterMax" placeholder="Max Stock">
                        </div>
                    </div>

                    <!-- Rating Filter -->
                    <div class="form-group d-flex align-items-start flex-column">
                        <label for="ratingFilterMin" class="mr-2">Rating</label>
                        <div class="d-flex flex-wrap">
                            <input type="number" class="form-control form-control-sm no-outline mr-1" id="ratingFilterMin" placeholder="Min Rating" step="0.1" min="0" max="5">
                            <input type="number" class="form-control form-control-sm no-outline" id="ratingFilterMax" placeholder="Max Rating" step="0.1" min="0" max="5">
                        </div>
                    </div>

                    <!-- Category Filter -->
                    <div class="form-group d-flex  flex-column">
                        <label for="categoryFilter" class="mr-2">Category</label>
                        <select class="form-control form-control-sm no-outline mr-2" id="categoryFilter">
                            <option value="">Choose</option>
                            <option value="Table">Table</option>
                            <option value="Chair">Chair</option>
                            <option value="Sofa">Sofa</option>
                            <option value="Bed">Bed</option>
                            <!-- Diğer kategoriler -->
                        </select>

                        
                    </div>
                    <div class="form-group d-flex  flex-column">
                        <label for="statusFilter" class="mr-2">Status</label>
                        <select class="form-control form-control-sm no-outline me-2" id="statusFilter">
                            <option value="active" selected>Active</option>
                            <option value="inactive">Inactive</option>
                        </select>
                    </div>

                    <div class="form-group" style="margin-top:19px;">
                        <!-- Apply Filter Button -->
                        <button type="button" id="applyFilter" class="btn btn-smaller btn-primary">Apply Filter</button>
                    </div>
                </form>


            </div>
        </div>
    </div>

    */}


    <!-- Tablo -->
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Images</th>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Stock</th>
                <th>Created At</th>
                <th>Category</th>
                <th>Rating</th>
                <th>Favorite</th>
                <th>Reviews</th>
                <th>Status</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="productTableBody">
            @if (Model.products != null && Model.products.Any())
            {
                <!-- Tablo içeriği burada dinamik olarak oluşturulacak -->
                @foreach (var product in Model.products)
                {
                    <tr class="product-row">
                        <td>
                            <!-- Sadece ilk resmi gösteren Carousel bileşeni -->
                            <div id="carousel-@product.ProductId" class="carousel slide" data-ride="carousel">
                                <div class="carousel-inner">
                                    <div class="carousel-item active  d-flex justify-content-center">
                                        @if (product.Images.Count > 0)
                                        {
                                            <!-- Example product image link -->
                                            <a href="#" data-toggle="modal" data-target="#imageModal"
                                               data-product-name="@product.Name"
                                               data-product-images="@string.Join(",", product.Images)"
                                               data-product-category="@product.Category">
                                                <img src="@Url.Content("~/images/" + product.Category + "/" + product.Images[0])" alt="@product.Name" class="d-block card-img" style="width: auto; height: 45px;" />
                                            </a>

                                        }
                                        else
                                        {
                                            <img src="~/images/placeholder-1.png"
                                                 alt="@product.Name" class="d-block card-img" style="width: auto; height: 45px;" />
                                        }
                                    </div>
                                </div>
                            </div>
                        </td>


                        <script src="/_framework/aspnetcore-browser-refresh.js"></script>

                        <!-- Modal Window -->
                        <div class="modal fade" id="imageModal" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="imageModalLabel"></h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <div id="carouselImages" class="carousel slide" data-ride="carousel">
                                            <div class="carousel-inner"></div>
                                            <a class="carousel-control-prev" href="#carouselImages" role="button" data-slide="prev">
                                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                                <span class="sr-only">Previous</span>
                                            </a>
                                            <a class="carousel-control-next" href="#carouselImages" role="button" data-slide="next">
                                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                                <span class="sr-only">Next</span>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>








                        <td>@product.Name</td>
                        <td class="table-description" onclick="showFullDescription('@product.Description')"  style=" white-space: nowrap; overflow:hidden; text-overflow:ellipsis; max-width: 20px;">
                            @product.Description
                        
                        </td>

                    

                        <!-- Description Modal -->
                        <div class="modal fade " id="descriptionModal" tabindex="-1" role="dialog" aria-labelledby="descriptionModalLabel" aria-hidden="true">
                            <div class="modal-dialog  modal-dialog-centered " role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h6 class="modal-title" id="descriptionModalLabel">Description</h6>
                                    </div>
                                    <div class="modal-body">
                                        <p id="modalDescription"  style="font-size:14px;"></p>
                                    </div>

                                </div>
                            </div>
                        </div>

                        <td>$@product.Price</td>
                        <td>@product.Stock</td>
                        <td>@product.CreatedAt.ToShortDateString()</td>
                        <td>@product.Category</td>
                       <td>
                            @if (@product.Rating >= 0 && @product.Rating <= 5)
                            {
                           
                                var fullStars = (int)Math.Floor(@product.Rating);
                                var halfStar = (@product.Rating - fullStars) >= 0.5;
                                // Boş yıldızların sayısı
                                var emptyStars = 5 - fullStars - (halfStar ? 1 : 0);

                                for (int i = 0; i < fullStars; i++)
                                {
                                    <i class="las la-star" style="color: #ffd700"></i>
                                }

                                if (halfStar)
                                {
                                    <i class="las la-star-half-alt" style="color: #ffd700"></i>
                                }

                                for (int i = 0; i < emptyStars; i++)
                                {
                                    <span class="las la-star" style="color: lightgrey"></span>
                                }
                            }

                        </td>


                        <td>
                            <span class="favorite ">
                                <span class="favorite-count">@product.Favorite</span>
                                
                                <i class="las la-heart" style="color: #e74c3c;"></i>
                            
                            </span>
                        </td>


                        <td>
                            @product.reviews.Count
                            <button type="button" class="btn btn-sm" style="font-size:15px; margin-top:-2px; margin-left:-7px;" data-toggle="modal" data-target="#reviewModal-@product.ProductId">
                                <i class="las la-comment-dots"></i>
                            </button>

                            <!-- Modal -->
                            <div class="modal fade" id="reviewModal-@product.ProductId" tabindex="-1" role="dialog" aria-labelledby="reviewModalLabel" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h6 class="modal-title" id="reviewModalLabel">Reviews for @product.Name</h6>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            @if (@product.reviews.Any())
                                            {
                                                for (int i = 0; i < product.reviews.Count; i++)
                                                {
                                                    var review = product.reviews[i];
                                                    <div class="mb-2 review-item">
                                                        <span>@review.Review</span>
                                                        <p class="review-date">@review.CreatedAt.ToString("MMMM d, yyyy")</p>

                                                    </div>
                                                    @if (i < product.reviews.Count - 1)
                                                    {
                                                        <hr class="review-separator" />
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                <p>No reviews available.</p>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </td>


                        <td>
                            @if (product.isAvailable == "true")
                            {
                                <span class="text-success align-items-center">
                                    <span class="dot dot-green mr-2"></span>
                                    <span>Active</span>
                                </span>
                            }
                            else
                            {
                                <span class="text-danger align-items-center">
                                    <span class="dot dot-red mr-2"></span>
                                    <span>Inactive</span>
                                </span>
                            }
                        </td>

                        <td>
                            <button type="button" class="btn btn-sm btn-outline-primary d-flex align-items-center justify-content-center" data-toggle="modal" data-target="#updateProductModal-@product.ProductId">
                                <i class="las la-edit"></i>
                            </button>
                        </td>
                    </tr>



                      <!-- Update Product Modal -->
                    <div class="modal fade" id="updateProductModal-@product.ProductId" tabindex="-1" role="dialog" aria-labelledby="updateProductModalLabel-@product.ProductId" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h6 class="modal-title" id="updateProductModalLabel-@product.ProductId">Update Product</h6>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <form method="post" action="@Url.Action("UpdateProduct", "Seller")" enctype="multipart/form-data">
                                        <input type="hidden" name="ProductId" value="@product.ProductId" />
                                        <div class="form-group">
                                            <label for="productName-@product.ProductId" style="font-size: 14px;">Product Name:</label>
                                            <input type="text" class="form-control no-outline" style="font-size: 13px;" id="productName-@product.ProductId" name="Name" value="@product.Name" required>
                                        </div>
                                        <div class="form-group">
                                            <label for="productDescription-@product.ProductId" style="font-size: 14px;">Product Description:</label>
                                            <textarea class="form-control no-outline" style="font-size: 13px;" id="productDescription-@product.ProductId" name="Description" rows="3" required>@product.Description</textarea>
                                        </div>
                                        <div class="form-group">
                                            <label for="productPrice-@product.ProductId" style="font-size: 14px;">Price:</label>
                                            <input type="number" class="form-control no-outline" style="font-size: 13px;" id="productPrice-@product.ProductId" name="Price" step="0.01" value="@product.Price" required>
                                        </div>
                                        <div class="form-group">
                                            <label for="productStock-@product.ProductId" style="font-size: 14px;">Stock Quantity:</label>
                                            <input type="number" class="form-control no-outline" style="font-size: 13px;" id="productStock-@product.ProductId" name="Stock" value="@product.Stock" required>
                                        </div>
                                        <div class="form-group">
                                            <label for="productCategory-@product.ProductId" style="font-size: 14px;">Category:</label>
                                            <select class="form-control no-outline" style="font-size: 13px;" id="productCategory-@product.ProductId" name="Category" required>
                                                @foreach (var category in Model.categories)
                                                {
                                                    if (category == product.Category)
                                                    {
                                                        <option value="@category" selected>@category</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@category">@category</option>
                                                    }
       }
                                            </select>
                                        </div>


                                        <div class="form-group">
                                            <label for="productImages-@product.ProductId" style="font-size: 14px;">Product Images:</label>

                                            <div id="existing-images-@product.ProductId" class="mb-2">
                                                @foreach (var image in product.Images)
                                                {
                                                    <div class="image-item position-relative" style="display: inline-block; margin-right: 10px;">
                                                        <img src="@Url.Content("~/images/" + product.Category + "/" + image)" alt="Product Image" class="img-thumbnail" style="width: AUTO; height: 70px;">
                                                        <button type="button" class="btn btn-sm btn-danger remove-image" data-image="@image" data-product-id="@product.ProductId" data-category="@product.Category" style="position: absolute; top: 0px; right: 0px;">
                                                            <i class="las la-trash"></i>
                                                        </button>
                                                    </div>
                                                }
                                            </div>

                                            <div id="new-images-preview-@product.ProductId" class="mb-2"></div>

                                            @if (product.Images.Count < 4)
                                            {
                                                <input type="file" class="form-control no-outline" style="font-size: 13px;" id="productImages-@product.ProductId" name="Images" multiple onchange="checkImageCount(this, @product.ProductId)">
                                            }
                                            else
                                            {
                                                <p>Maximum of 4 images can be uploaded.</p>
                                            }
                                        </div>




                                        <div class="d-flex align-items-center justify-content-between">
                                            <div class="d-flex align-items-center">
                                                <label class="form-check-label" style="font-size: 14px;">Active:</label>
                                                <input type="checkbox" class="form-check-input ml-2" name="isAvailable" value="true" @(product.isAvailable == "true" ? "checked" : "")>
                                            </div>
                                            <button type="submit" class="btn btn-primary btn-smaller">Update Product</button>
                                        </div>


                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>








                }
            }
        </tbody>
    </table>

    <div class="d-flex justify-content-between align-items-center">
        <!-- Page Navigation -->
        <nav aria-label="Page navigation">
            <ul class="pagination pagination-sm">
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Products", "Seller", new { page = i })">@i</a>
                    </li>
                }
            </ul>
        </nav>

        <!-- Ürün ekleme butonu -->
        <button type="button" class="btn btn-sm btn-outline-primary" data-toggle="modal" data-target="#addProductModal" style="margin-top:-20px;">
            Add Product
        </button>
    </div>
</div>

<!-- Modal for adding product -->
<div class="modal fade" id="addProductModal" tabindex="-1" role="dialog" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title" id="addProductModalLabel">Add New Product</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container">
                    <form class="gap-1"  method="post" action="@Url.Action("AddNewProduct", "Seller")" enctype="multipart/form-data">
                        <div class="form-group">
                            <label for="productName" style="font-size:14px;">Product Name:</label>
                            <input type="text" class="form-control no-outline" style="font-size:13px;" id="productName" name="Name" required>
                        </div>
                        <div class="form-group">
                            <label for="productDescription" style="font-size:14px;">Product Description:</label>
                            <textarea class="form-control no-outline" style="font-size:13px;" id="productDescription" name="Description" rows="3" required></textarea>
                        </div>
                        <div class="form-group">
                            <label for="productPrice" style="font-size:14px;">Price:</label>
                            <input type="number" class="form-control no-outline" style="font-size:13px;" id="productPrice" name="Price" step="0.01" required>
                        </div>
                        <div class="form-group">
                            <label for="productStock" style="font-size:14px;">Stock Quantity:</label>
                            <input type="number" class="form-control no-outline" style="font-size:13px;" id="productStock" name="Stock" required>
                        </div>
                        <div class="form-group">
                            <label for="productCategory" style="font-size:14px;">Category:</label>
                            <select class="form-control no-outline" style="font-size:13px;" id="productCategory" name="Category" required>
                                @foreach (var category in Model.categories)
                                {
                                    <option value="@category">@category</option>
                                }
                            </select>
                        </div>


                        <div class="d-flex align-items-center justify-content-between">
                            <div class="d-flex align-items-center">
                                <label class="form-check-label" style="font-size:14px;" for="availabilityToggle">Active: </label>
                                <div class="form-check form-switch" style="margin-left:10px; margin-top:5px;">
                                    <input class="form-check-input" type="checkbox" id="availabilityToggle" name="isAvailable" value="available">
                                </div>
                            </div>

                            <div class="form-group mt-3">
                                <span style="margin-right:10px; font-size:14px;">Select Images:</span>
                                <label for="productImages" class="btn btn-sm " style="border:1px solid black">
                                    <i class="las la-file"></i>File
                                    <input type="file" id="productImages" name="Images" multiple accept="image/*" style="display: none;">
                                </label>
                                <span id="file-selected-info"></span>
                            </div>
                        </div>



                        
                        <div class="image-preview mt-3 row gap-2">
                            <!-- Burada eklenen resimlerin listesi olacak -->
                            <div id="image-preview-container" class="d-flex flex-wrap">
                                <!-- Eklenen resimler dinamik olarak burada listelenecek -->
                            </div>
                        </div>
                        <div class="col-12 d-flex justify-content-end">
                            <button type="submit" class="btn btn-primary" style="margin-right:-3px;">Submit</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>




<style>
    .btn:focus,
    .btn:active {
        box-shadow: none;
        outline: none;
    }

    /* Reset default outline */
    input:focus,
    textarea:focus,
    select:focus {
        box-shadow: none;
        outline: none;
    }

    .form-group {
        margin-bottom: 10px;
    }

    .image-preview {
        margin-top: 1rem;
    }

    .image-preview img {
        max-width: 100px;
        margin-right: 10px;
        margin-bottom: 10px; 
    }

    .dot {
        width: 8px;
        height: 8px;
        border-radius: 50%;
        display: inline-block;
        margin-left: 5px;
    }

    .dot.dot-green {
        background-color: #4CAF50; 
    }

    .dot.dot-red {
        background-color: #F44336; 
    }

    table th{
        font-size: 14px;
        text-align: center;
    }

    table td{
        text-align: center; 
        font-size: 13px;
    }

    .review-item {
        text-align: left; /* Textleri sola hizalar */
    }

    .review-separator {
        border-top: 1px solid #ddd; /* Gri renkli çizgi */
        margin: 10px 0; /* Çizgi ile yorumlar arasında boşluk */
    }

    .review-date {
        font-size: 13px; 
        color: #b0bec5;
        margin-top: 5px; 
    }
</style>


<!-- jQuery -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>



<script>

    $(document).ready(function () {
        var maxImages = 5; // Adjust the maximum number of images allowed

        // File input change event
        $('#productImages').on('change', function () {
            const files = $(this)[0].files;

            // Iterate through selected files
            for (let i = 0; i < files.length; i++) {
                if (i >= maxImages) break; // Limit to maxImages

                // Create FileReader instance for each file
                const reader = new FileReader();

                // Closure to capture the file information
                reader.onload = (function (file) {
                    return function (e) {
                        // Render thumbnail
                        const imageSrc = e.target.result;
                        const imageElement = `
                            <div class="image-item position-relative" style="display:inline-block;">
                                <img src="${imageSrc}" alt="Preview Image" style=" display: block; ">
                                <button type="button" class="btn btn-sm btn-danger remove-image position-absolute" style="border-radius: 100%;  bottom:0px; right:0px; border:none; cursor:pointer; width:30px; height:30px;">
                                    <i class="las la-trash"></i>
                                </button>
                            </div>
                        `;
                        $('#image-preview-container').append(imageElement);

                        // Remove image event
                        $('.remove-image').on('click', function () {
                            $(this).parent().remove();
                        });
                    };
                })(files[i]);

                // Read in the image file as a data URL
                reader.readAsDataURL(files[i]);
            }
        });



        // Modal show event
        $('#imageModal').on('show.bs.modal', function (event) {
            var link = $(event.relatedTarget); // Link that triggered the modal
            var productName = link.data('product-name'); // Extract info from data-* attributes
            var productImages = link.data('product-images').split(','); // Split images into an array
            var productCategory = link.data('product-category'); // Extract category

            var modal = $(this);
            modal.find('.modal-title').text(productName);

            var carouselInner = modal.find('.carousel-inner');
            carouselInner.empty(); // Clear existing images

            // Add new images to the carousel
            productImages.forEach(function (image, index) {
                var activeClass = index === 0 ? 'active' : '';
                var itemHtml = `
                    <div class="carousel-item ${activeClass}">
                        <img src="/images/${productCategory}/${image}" alt="${productName}" class="d-block w-100 img-fluid img-thumbnail" style="object-fit: contain; max-height: 450px;">
                    </div>
                `;
                carouselInner.append(itemHtml);

            });
        });




        $(document).ready(function () {
            $(".remove-image").on("click", function () {
                var button = $(this);
                var imageName = button.data("image");
                var productId = button.data("product-id");
                var category = button.data("category");

                console.log("Image to remove:", imageName, "Product ID:", productId, "Category:", category); // Log

                fetch('/Seller/RemoveProductImage', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId: productId, imageName: imageName, category: category })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Remove the image div from the DOM
                            button.closest('.image-item').remove();

                            // Check if the file input should be re-enabled
                            var existingImagesCount = $('#existing-images-' + productId + ' .image-item').length;
                            if (existingImagesCount < 4) {
                                var fileInput = $('#productImages-' + productId);
                                fileInput.show(); // Show the file input
                            }
                        } else {
                            alert('Failed to remove image: ' + data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred.');
                    });

                return false;
            });
        });

 

    });


    function checkImageCount(input, productId) {
        var existingImagesCount = document.querySelectorAll('#existing-images-' + productId + ' .image-item').length;
        var newImagesCount = input.files.length;

        if (existingImagesCount + newImagesCount > 4) {
            alert('Maximum of 4 images can be uploaded.');
            input.value = ""; // Clear the input field
            document.getElementById('new-images-preview-' + productId).innerHTML = ""; // Clear the preview
        } else {
            // Show previews of new images
            var previewContainer = document.getElementById('new-images-preview-' + productId);
            previewContainer.innerHTML = ""; // Clear previous previews

            Array.from(input.files).forEach(file => {
                var reader = new FileReader();
                reader.onload = function (e) {
                    var img = document.createElement('img');
                    img.src = e.target.result;
                    img.className = 'img-thumbnail';
                    img.style.width = 'AUTO';
                    img.style.height = '70px';
                    img.style.marginRight = '10px';
                    previewContainer.appendChild(img);
                }
                reader.readAsDataURL(file);
            });
        }
    }














   

    /* Desciption modalı */
    function showFullDescription(description) {
        document.getElementById('modalDescription').innerText = description;
        $('#descriptionModal').modal('show');
    }

    function limitImageSelection(input) {
        if (input.files.length > 4) {
            alert("You can only select up to 4 images.");
            input.value = ''; // Clear the selected files
        }
    }

    /* Search ve filter için */
    document.getElementById('applyFilter').addEventListener('click', function () {
        const keyword = document.getElementById('searchInput').value.toLowerCase();
        const maxPrice = document.getElementById('priceFilter').value;
        const minStock = document.getElementById('stockFilter').value;
        const category = document.getElementById('categoryFilter').value;
        const minRating = document.getElementById('ratingFilter').value;
        const favorite = document.getElementById('favoriteFilter').checked;
        const status = document.getElementById('statusFilter').value;

        const rows = document.querySelectorAll('table tbody tr');
        rows.forEach(row => {
            const productName = row.querySelector('td:nth-child(1)').innerText.toLowerCase();
            const productDescription = row.querySelector('td:nth-child(2)').innerText.toLowerCase();
            const productPrice = parseFloat(row.querySelector('td:nth-child(4)').innerText);
            const productStock = parseInt(row.querySelector('td:nth-child(5)').innerText);
            const productCategory = row.querySelector('td:nth-child(6)').innerText;
            const productRating = parseFloat(row.querySelector('td:nth-child(7)').innerText);
            const productFavorite = row.querySelector('td:nth-child(8)').innerText === 'Yes';
            const productStatus = row.querySelector('td:nth-child(9)').innerText;

            let isVisible = true;

            if (keyword && !(productName.includes(keyword) || productDescription.includes(keyword))) {
                isVisible = false;
            }
            if (maxPrice && productPrice > maxPrice) {
                isVisible = false;
            }
            if (minStock && productStock < minStock) {
                isVisible = false;
            }
            if (category && productCategory !== category) {
                isVisible = false;
            }
            if (minRating && productRating < minRating) {
                isVisible = false;
            }
            if (favorite && !productFavorite) {
                isVisible = false;
            }
            if (status && productStatus !== status) {
                isVisible = false;
            }

            if (isVisible) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    });

    /* ısAvailable check box için */
    document.addEventListener('DOMContentLoaded', function () {
        var checkbox = document.getElementById('availabilityToggle');
        var isAvailableInput = document.querySelector('input[name="isAvailable"]');

        // Checkbox durumu değiştiğinde dinamik olarak güncelle
        checkbox.addEventListener('change', function () {
            if (checkbox.checked) {
                isAvailableInput.value = "available";
            } else {
                isAvailableInput.value = "unavailable";
            }
        });

        // Sayfa yüklendiğinde checkbox durumunu kontrol et ve ilk değeri ayarla
        if (checkbox.checked) {
            isAvailableInput.value = "available";
        } else {
            isAvailableInput.value = "unavailable";
        }
    });






    $('#imageModal').on('shown.bs.modal', function () {
    $('#carouselImages').carousel();
});

</script>

